# Bind all species df together for GO slim plot
all.go.slim <- rbind(Gene.GO.IDs.slims.acerv, Gene.GO.IDs.slims.mcav, Gene.GO.IDs.slims.pdam, Gene.GO.IDs.slims.plob)
GO.all <- ggplot(all.go.slim, aes(x = Species, y = term)) +
geom_tile(aes(fill =over_represented_pvalue)) +
facet_grid(GO.Slim.Term ~ ., scales = "free_y", labeller = label_wrap_gen(width = 5, multi_line = TRUE))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle=0, size = 25),
strip.text.x = element_text(size = 25),
axis.text = element_text(size = 15))
GO.all
ggsave("~/Desktop/all_GOslim_20210509.pdf", GO.all, width = 28, height = 28, units = c("in"))
# Subset and plot only 'other molecular function', 'other metabolic processes', and 'protein metabolism'
go.slim.subset <- all.go.slim %>% filter(GO.Slim.Term=="other molecular function" | GO.Slim.Term=="other metabolic processes")
GO.subset <- ggplot(go.slim.subset, aes(x = Species, y = term)) +
geom_tile(aes(fill =over_represented_pvalue)) +
facet_grid(GO.Slim.Term ~ ., scales = "free_y", labeller = label_wrap_gen(width = 5, multi_line = TRUE))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
strip.text.y = element_text(angle=0, size = 25),
strip.text.x = element_text(size = 25),
axis.text = element_text(size = 15))
GO.subset
ggsave("~/Desktop/molecSubset_GOslim_20210509.pdf", GO.all, width = 28, height = 28, units = c("in"))
ggsave("~/Desktop/molecSubset_GOslim_20210509.pdf", GO.subset, width = 28, height = 28, units = c("in"))
acerv_test <- read.csv("~/Desktop/acerv_sub_GO_ALL_20210326.csv")
View(acerv_test)
length(unique(acerv_test$category))
acerv_test <- read.csv("~/Desktop/acerv_sub_ByTreatment_GO.terms_20210327.csv")
length(unique(acerv_test$gene_id))
test <- read.csv("~/Desktop/mcav_ByTreatment_GO.terms_20210208.csv")
View(test)
length(unique(test$gene_id))
test <- read.csv("~/Desktop/pdam_ByTreatment_GO.terms_20210508.csv")
test <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/output/GOSeq/pdam/pdam_ByTreatment_GO.terms_20210508.csv")
length(unique(test$gene_id))
test <- read.csv("~/Desktop/plob_ByTreatment_GO.terms_20210326.csv")
length(unique(test$gene_id))
View(test)
length(unique(test$category))
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis
plob.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_DEGs.all_treatment_20210326.csv")
View(plob.DEG)
plob.DEG <- filter(plob.DEG, -X)
plob.DEG <- select(plob.DEG, -X)
colnames(plob.DEG)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- plob.DEG$padj < padj.cutoff & abs(plob.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold))
plob.DEG$threshold <- threshold
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj))) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=threshold)) +
ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(legend.position = "topleft",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare), size = 2) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare), size = 5) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare), size = 5, alpha = 0.6) +
#ggtitle("Mov10 overexpression") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
geom_text(label=gene_id, nudge_x = 0.25, nudge_y = 0.25, check_overlap = T) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
geom_text(label=plob.DEG$gene_id, nudge_x = 0.25, nudge_y = 0.25, check_overlap = T) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
rownames(plob.DEG) <- plob.DEG$gene_id
# Volcano plot
ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/plob/plob_volcano.pdf", plob.volcano, width = 30, height = 20,, units = "cm")
# Volcano plot
plob.volcano <- ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/plob/plob_volcano.pdf", plob.volcano, width = 30, height = 20,, units = "cm")
## trying volcano plot with expanded data
plob_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/plob/plob_ByTreatment_GO.terms_20210326.csv")
View(plob_ByTreatment)
# Volcano plot
plob.volcano <- ggplot(plob_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj))) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
# Volcano plot
plob.volcano <- ggplot(plob_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
unique.sig.list <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_unique.sig.list_20210326.csv")
SFtest <- estimateSizeFactors(unique.sig.list)
library("DESeq2")
library("tidyverse")
library("dplyr")
library("pheatmap")
library("RColorBrewer")
library("genefilter")
library("ggplot2")
library("gplots")
library("limma")
library("spdep")
library("adegenet")
library("goseq")
library("gridExtra")
library("clusterProfiler")
library("DataCombine")
library("VennDiagram")
SFtest <- estimateSizeFactors(unique.sig.list)
unique.vst.sig <- varianceStabilizingTransformation(unique.sig.list, blind = FALSE) # apply a regularized log transformation to minimize effects of small counts and normalize wrt library
unique.vst.sig <- varianceStabilizingTransformation(unique.sig.list, blind = FALSE) # apply a regularized log transformation to minimize effects of small counts and normalize wrt library
unique.sig.list <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_unique.sig.list_20210326.csv")
unique.vst.sig <- varianceStabilizingTransformation(unique.sig.list, blind = FALSE) # apply a regularized log transformation to minimize effects of small counts and normalize wrt library
unique.sig.list <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_unique.sig.list_20210326.csv")
unique.vst.sig <- varianceStabilizingTransformation(unique.sig.list, blind = FALSE) # apply a regularized log transformation to minimize effects of small counts and normalize wrt library
# PCA plot of diff-expressed genes
plob_DEGPCAdata <- plotPCA(unique.sig.list, intgroup = c("Treatment"), returnData=TRUE)
countdata <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_gene_count_matrix.csv")
dim(countdata) # 31126 x 17
for ( col in 1:ncol(countdata)){
colnames(countdata)[col] <-  gsub("X", "", colnames(countdata)[col])
}
for ( col in 1:ncol(countdata)){
colnames(countdata)[col] <-  gsub(".fastq.trim.fq.noGFF.Aligned.sortedByCoord.out.bam.merge.gtf", "", colnames(countdata)[col])
}
rownames(countdata) <- countdata$gene_id
metadata_plob <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Data/plob_metadata_raw_filtered.csv")
metadata_plob <- na.omit(metadata_plob)
metadata_plob$SampleID <- gsub("X", "", metadata_plob$SampleID)
rownames(metadata_plob) <- metadata_plob$SampleID
# Subset count data for only plob samples with metadata based on SampleID and make sure rows of metadata = cols of count data
plob_ID <- metadata_plob$SampleID
count_plob <- select(countdata, all_of(plob_ID))
all(rownames(metadata_plob) %in% colnames(count_plob))
filt <- filterfun(pOverA(0.85, 5)) # set filter values for P over A; I used 0.85 and 5
tfil <- genefilter(count_plob, filt) # create filter for counts data
keep <- count_plob[tfil,] # identify genes to keep based on filter
gn.keep <- rownames(keep)
plob_counts_filt <- as.matrix(count_plob[which(rownames(count_plob) %in% gn.keep),])
dim(plob_counts_filt) # 15369 x 12
storage.mode(plob_counts_filt) <- "integer" # stores count data as integer
# Checking to make sure rownames in metadata == colnames in counts data
all(rownames(metadata_plob) %in% colnames(plob_counts_filt)) # must come out TRUE
# Set Treatment as a factor
metadata_plob$Treatment <- factor(metadata_plob$Treatment, levels = c("control", "mid", "high"))
data <- DESeqDataSetFromMatrix(countData = plob_counts_filt, colData = metadata_plob, design = ~ Treatment)
# Differential gene expression analysis
DEG.int <- DESeq(data) # run differential expression test by treatment (?) using wald test
# estimating size factors
# estimating dispersions
# gene-wise dispersion estimates
# mean-dispersion relationship
# final dispersion estimates
# fitting model and testing
DEG.int.res <- results(DEG.int)
resultsNames(DEG.int) # view DE results
# Compare C and mid
DEG_control_vs_mid <- results(DEG.int, contrast = c("Treatment", "control", "mid"))
DEG_control_vs_mid
DEG_control_vs_mid <- as.data.frame(DEG_control_vs_mid) # make full results into a df
DEG_control_vs_mid["Treatment_Compare"] <- "CvsMid" # add treatment comparison col
DEG_control_vs_mid.sig.num <- sum(DEG_control_vs_mid$padj <0.05, na.rm = T) # identify # of significant pvalues with 10%FDR (padj<0.1) -  jk using 0.05
DEG_control_vs_mid.sig.num
# 109 DEGs
DEG_control_vs_mid.sig <- subset(DEG_control_vs_mid, padj <0.05) # identify and subset significant pvalues
DEG_control_vs_mid.sig["Treatment_Compare"] <- "CvsMid" # adding treatment comparison column
DEG_control_vs_mid.sig.list <- data[which(rownames(data) %in% rownames(DEG_control_vs_mid.sig)),] # subset list of significant genes from original count data
DEG_control_vs_mid.sig.list <- as.data.frame(counts(DEG_control_vs_mid.sig.list)) # make list of sig gene counts into a df
DEG_control_vs_mid.sig.list_full <- cbind(DEG_control_vs_mid.sig, DEG_control_vs_mid.sig.list)
DEG_control_vs_high <- results(DEG.int, contrast = c("Treatment", "control", "high"))
DEG_control_vs_high
DEG_control_vs_high <- as.data.frame(DEG_control_vs_high) # make full results into a df
write.csv(DEG_control_vs_high, file = "~/Desktop/pdam_control_vs_high_all_genes_20210326.csv") # maybe include gene counts too?
DEG_control_vs_high.sig.num <- sum(DEG_control_vs_high$padj <0.05, na.rm = T) # identify # of significant pvalues with 10%FDR (padj<0.1) -  jk using 0.05
DEG_control_vs_high.sig.num
# 92 DEGs
DEG_control_vs_high.sig <- subset(DEG_control_vs_high, padj <0.05) # identify and subset significant pvalues
DEG_control_vs_high.sig["Treatment_Compare"] <- "CvsHigh" # adding treatment comparison column
DEG_control_vs_high.sig.list <- data[which(rownames(data) %in% rownames(DEG_control_vs_high.sig)),] # subset list of significant genes from original count data
DEG_control_vs_high.sig.list <- as.data.frame(counts(DEG_control_vs_high.sig.list)) # make list of sig gene counts into a df
DEG_control_vs_high.sig.list_full <- cbind(DEG_control_vs_high.sig, DEG_control_vs_high.sig.list) # bind results with gene counts for DEGs
DEG_mid_vs_high <- results(DEG.int, contrast = c("Treatment", "mid", "high"))
DEG_mid_vs_high
DEG_mid_vs_high <- as.data.frame(DEG_mid_vs_high) # make full results into a df
DEG_mid_vs_high["Treatment_Compare"] <- "MidvsHigh" # add treatment comparison col
DEG_mid_vs_high.sig.num <- sum(DEG_mid_vs_high$padj <0.05, na.rm = T) # identify # of significant pvalues with 10%FDR (padj<0.1) -  jk using 0.05
DEG_mid_vs_high.sig.num
# 18 DEGs
DEG_mid_vs_high.sig <- subset(DEG_mid_vs_high, padj <0.05) # identify and subset significant pvalues
DEG_mid_vs_high.sig["Treatment_Compare"] <- "MidvsHigh" # adding treatment comparison column
DEG_mid_vs_high.sig.list <- data[which(rownames(data) %in% rownames(DEG_mid_vs_high.sig)),] # subset list of significant genes from original count data
DEG_mid_vs_high.sig.list <- as.data.frame(counts(DEG_mid_vs_high.sig.list)) # make list of sig gene counts into a df
DEG_mid_vs_high.sig.list_full <- cbind(DEG_mid_vs_high.sig, DEG_mid_vs_high.sig.list) # bind results with gene counts for DEGs
# Make full list of genes and treatments
DEG_control_vs_mid.sig.list_full$gene_id <- rownames(DEG_control_vs_mid.sig.list_full)
rownames(DEG_control_vs_mid.sig.list_full) <- NULL
DEG_control_vs_high.sig.list_full$gene_id <- rownames(DEG_control_vs_high.sig.list_full)
rownames(DEG_control_vs_high.sig.list_full) <- NULL
DEG_mid_vs_high.sig.list_full$gene_id <- rownames(DEG_mid_vs_high.sig.list_full)
rownames(DEG_mid_vs_high.sig.list_full) <- NULL
DEGs.all <- rbind(DEG_control_vs_mid.sig.list_full,
DEG_control_vs_high.sig.list_full,
DEG_mid_vs_high.sig.list_full)
dim(DEGs.all) # 219 x 20
length(unique(DEGs.all$gene_id)) # 153 unique genes between all treatments
unique.sig.list <- data[which(rownames(data) %in% DEGs.all_plob$DEGs), ] # subset list of sig transcripts from original count data
SFtest <- estimateSizeFactors(unique.sig.list)
print(sizeFactors(SFtest))
unique.vst.sig <- varianceStabilizingTransformation(unique.sig.list, blind = FALSE) # apply a regularized log transformation to minimize effects of small counts and normalize wrt library
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
plob.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_DEGs.all_treatment_20210326.csv")
plob.DEG <- select(plob.DEG, -X)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- plob.DEG$padj < padj.cutoff & abs(plob.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold)) # this did not reduce anything, as the df only has DEGs in it?
# Add vector to df
plob.DEG$threshold <- threshold
# Volcano plot
plob.volcano <- ggplot(plob.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/plob/plob_volcano.pdf", plob.volcano, width = 28, height = 28, units = "cm")
## trying volcano plot with expanded data
plob_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/plob/plob_ByTreatment_GO.terms_20210326.csv")
View(plob_ByTreatment)
# Volcano plot
plob.volcano <- ggplot(plob_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/plob/plob_volcano.GOterms.pdf", plob.volcano, width = 28, height = 28, units = "cm")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
acerv.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/plob/plob_DEGs.all_treatment_20210219.csv")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
acerv.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/acerv/acerv_sub_DEGs.all_treatment_20210219.csv")
View(acerv.DEG)
acerv.DEG <- select(acerv.DEG, -X)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- acerv.DEG$padj < padj.cutoff & abs(acerv.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold)) # this did not reduce anything, as the df only has DEGs in it?
# Add vector to df
acerv.DEG$threshold <- threshold
# Volcano plot
plob.volcano <- ggplot(acerv.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/acerv/acerv_volcano.pdf", plob.volcano, width = 28, height = 28, units = "cm")
## trying volcano plot with expanded data
acerv_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/plob/plob_ByTreatment_GO.terms_20210327.csv")
## trying volcano plot with expanded data
acerv_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/acerv/acerv_ByTreatment_GO.terms_20210327.csv")
## trying volcano plot with expanded data
acerv_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/acerv/acerv_sub_ByTreatment_GO.terms_20210327.csv")
View(acerv_ByTreatment)
# Volcano plot
plob.volcano <- ggplot(plob_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
# Volcano plot
plob.volcano <- ggplot(plob_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/acerv/acerv_volcano.GOterms.pdf", plob.volcano, width = 28, height = 28, units = "cm")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
mcav.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/mcav/mcav_DEGs.all_treatment_20210208.csv")
View(mcav.DEG)
mcav.DEG <- select(mcav.DEG, -X)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- mcav.DEG$padj < padj.cutoff & abs(mcav.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold)) # this did not reduce anything, as the df only has DEGs in it?
# Add vector to df
mcav.DEG$threshold <- threshold
# Volcano plot
plob.volcano <- ggplot(mcav.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
# Add vector to df
mcav.DEG$threshold <- threshold
# Volcano plot
plob.volcano <- ggplot(mcav.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/mcav/mcav_volcano.pdf", plob.volcano, width = 28, height = 28, units = "cm")
## trying volcano plot with expanded data
mcav_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/mcav/mcav_ByTreatment_GO.terms_20210327.csv")
## trying volcano plot with expanded data
mcav_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/mcav/mcav_ByTreatment_GO.terms_20210208.csv")
View(mcav_ByTreatment)
# Volcano plot
plob.volcano <- ggplot(mcav_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
plob.volcano
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
acerv.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/acerv/acerv_sub_DEGs.all_treatment_20210219.csv")
acerv.DEG <- select(acerv.DEG, -X)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- acerv.DEG$padj < padj.cutoff & abs(acerv.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold)) # this did not reduce anything, as the df only has DEGs in it?
# Add vector to df
acerv.DEG$threshold <- threshold
# Volcano plot
acerv.volcano <- ggplot(acerv.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
acerv.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/acerv/acerv_volcano.pdf", acerv.volcano, width = 28, height = 28, units = "cm")
## trying volcano plot with expanded data
acerv_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/acerv/acerv_sub_ByTreatment_GO.terms_20210327.csv")
View(acerv_ByTreatment)
# Volcano plot
acerv.volcano <- ggplot(acerv_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
acerv.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/acerv/acerv_volcano.GOterms.pdf", acerv.volcano, width = 28, height = 28, units = "cm")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
mcav.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/mcav/mcav_DEGs.all_treatment_20210208.csv")
mcav.DEG <- select(mcav.DEG, -X)
# Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0.5
threshold <- mcav.DEG$padj < padj.cutoff & abs(mcav.DEG$log2FoldChange) > lfc.cutoff
length(which(threshold)) # this did not reduce anything, as the df only has DEGs in it?
# Add vector to df
mcav.DEG$threshold <- threshold
# Volcano plot
mcav.volcano <- ggplot(mcav.DEG) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=Treatment_Compare)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
mcav.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/mcav/mcav_volcano.pdf", mcav.volcano, width = 28, height = 28, units = "cm")
## trying volcano plot with expanded data
mcav_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/mcav/mcav_ByTreatment_GO.terms_20210208.csv")
View(mcav_ByTreatment)
# Volcano plot
mcav.volcano <- ggplot(mcav_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
mcav.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/mcav/mcav_volcano.GOterms.pdf", mcav.volcano, width = 28, height = 28, units = "cm")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
pdam.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/pdam/mcav_DEGs.all_treatment_20210326.csv")
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
pdam.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/pdam/pdam_DEGs.all_treatment_20210326.csv")
View(pdam.DEG)
##### Volcano plots
## Here, the log transformed adjusted p-values are plotted on the y-axis and log2 fold change values on the x-axis (https://hbctraining.github.io/Intro-to-R-with-DGE/lessons/B1_DGE_visualizing_results.html)
# Read in data
pdam.DEG <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/DESeq2/pdam/pdam_DEGs.all_treatment_20210326.csv")
## trying volcano plot with expanded data
pdam_ByTreatment <- read.csv("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/GOSeq/pdam/pdam_ByTreatment_GO.terms_20210508.csv")
View(pdam_ByTreatment)
# Volcano plot
pdam.volcano <- ggplot(pdam_ByTreatment) +
geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=term)) +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
pdam.volcano
ggsave("~/Desktop/PutnamLab/Repositories/SedimentStress/SedimentStress/Output/Plots/pdam/pdam_volcano.GOterms.pdf", pdam.volcano, width = 28, height = 28, units = "cm")
